//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class BlackhawkClientProgramWrapper {

	public String clientProgramId {get;set;} 
	public String programName {get;set;} 
	public String programType {get;set;} 
	public String currency_Z {get;set;} // in json: currency
	public List<Products> products {get;set;} 

	public BlackhawkClientProgramWrapper(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'clientProgramId') {
						clientProgramId = parser.getText();
					} else if (text == 'programName') {
						programName = parser.getText();
					} else if (text == 'programType') {
						programType = parser.getText();
					} else if (text == 'currency') {
						currency_Z = parser.getText();
					} else if (text == 'products') {
						products = arrayOfProducts(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'BlackhawkClientProgramWrapper consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Products {
		public String contentProviderCode {get;set;} 
		public String productName {get;set;} 
		public String productDescription {get;set;} 
		public String parentBrandName {get;set;} 
		public String redemptionInfo {get;set;} 
		public TermsAndConditions termsAndConditions {get;set;} 
		public String productImage {get;set;} 
		public String logoImage {get;set;} 
		public ValueRestrictions valueRestrictions {get;set;} 
		public String locale {get;set;} 

		public Products(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'contentProviderCode') {
							contentProviderCode = parser.getText();
						} else if (text == 'productName') {
							productName = parser.getText();
						} else if (text == 'productDescription') {
							productDescription = parser.getText();
						} else if (text == 'parentBrandName') {
							parentBrandName = parser.getText();
						} else if (text == 'redemptionInfo') {
							redemptionInfo = parser.getText();
						} else if (text == 'termsAndConditions') {
							termsAndConditions = new TermsAndConditions(parser);
						} else if (text == 'productImage') {
							productImage = parser.getText();
						} else if (text == 'logoImage') {
							logoImage = parser.getText();
						} else if (text == 'valueRestrictions') {
							valueRestrictions = new ValueRestrictions(parser);
						} else if (text == 'locale') {
							locale = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Products consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class TermsAndConditions {
		public String type {get;set;} 
		public String text {get;set;} 

		public TermsAndConditions(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String textInstance = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (textInstance == 'type') {
							type = parser.getText();
						} else if (textInstance == 'text') {
							text = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'TermsAndConditions consuming unrecognized property: '+textInstance);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class ValueRestrictions {
		public Double minimum {get;set;} 
		public Double maximum {get;set;} 

		public ValueRestrictions(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'minimum') {
							minimum = parser.getDoubleValue();
						} else if (text == 'maximum') {
							maximum = parser.getDoubleValue();
						} else {
							System.debug(LoggingLevel.WARN, 'ValueRestrictions consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public static BlackhawkClientProgramWrapper parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new BlackhawkClientProgramWrapper(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

    private static List<Products> arrayOfProducts(System.JSONParser p) {
        List<Products> res = new List<Products>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Products(p));
        }
        return res;
    }
}